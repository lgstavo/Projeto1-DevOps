services:
  backend:
    build: ./backend
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_USER: meu_app_user
      DB_PASSWORD: meu_app_password
      DB_NAME: meu_app_db
      JWT_SECRET: 'seuSegredoSuperSecretoParaJWT-MUDEISSO' # IMPORTANTE: Mude isso!
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build: ./frontend
    ports:
      - "8080:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: mysql:8.0
    ports:
      - "3307:3306" # Mapeia para 3307 no host para evitar conflito se já tiver MySQL rodando na 3306
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword # Senha do root (use algo mais seguro)
      MYSQL_DATABASE: meu_app_db
      MYSQL_USER: meu_app_user
      MYSQL_PASSWORD: meu_app_password
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s # Dá mais tempo para o MySQL iniciar antes do healthcheck começar
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge